// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.6.1
// source: tcc_tc.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TccRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gtid       string               `protobuf:"bytes,1,opt,name=gtid,proto3" json:"gtid,omitempty"`
	Business   string               `protobuf:"bytes,2,opt,name=business,proto3" json:"business,omitempty"`
	ExpireTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	Branches   []*TccBranchRequest  `protobuf:"bytes,4,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *TccRequest) Reset() {
	*x = TccRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcc_tc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TccRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TccRequest) ProtoMessage() {}

func (x *TccRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tcc_tc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TccRequest.ProtoReflect.Descriptor instead.
func (*TccRequest) Descriptor() ([]byte, []int) {
	return file_tcc_tc_proto_rawDescGZIP(), []int{0}
}

func (x *TccRequest) GetGtid() string {
	if x != nil {
		return x.Gtid
	}
	return ""
}

func (x *TccRequest) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *TccRequest) GetExpireTime() *timestamp.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *TccRequest) GetBranches() []*TccBranchRequest {
	if x != nil {
		return x.Branches
	}
	return nil
}

type TccBranchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId      int32              `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	ActionConfirm string             `protobuf:"bytes,2,opt,name=action_confirm,json=actionConfirm,proto3" json:"action_confirm,omitempty"`
	ActionCancel  string             `protobuf:"bytes,3,opt,name=action_cancel,json=actionCancel,proto3" json:"action_cancel,omitempty"`
	Payload       []byte             `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Timeout       *duration.Duration `protobuf:"bytes,5,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Retry         *duration.Duration `protobuf:"bytes,6,opt,name=retry,proto3" json:"retry,omitempty"`
}

func (x *TccBranchRequest) Reset() {
	*x = TccBranchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcc_tc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TccBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TccBranchRequest) ProtoMessage() {}

func (x *TccBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tcc_tc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TccBranchRequest.ProtoReflect.Descriptor instead.
func (*TccBranchRequest) Descriptor() ([]byte, []int) {
	return file_tcc_tc_proto_rawDescGZIP(), []int{1}
}

func (x *TccBranchRequest) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *TccBranchRequest) GetActionConfirm() string {
	if x != nil {
		return x.ActionConfirm
	}
	return ""
}

func (x *TccBranchRequest) GetActionCancel() string {
	if x != nil {
		return x.ActionCancel
	}
	return ""
}

func (x *TccBranchRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TccBranchRequest) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *TccBranchRequest) GetRetry() *duration.Duration {
	if x != nil {
		return x.Retry
	}
	return nil
}

type TccResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tcc *Tcc `protobuf:"bytes,1,opt,name=tcc,proto3" json:"tcc,omitempty"`
}

func (x *TccResponse) Reset() {
	*x = TccResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcc_tc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TccResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TccResponse) ProtoMessage() {}

func (x *TccResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tcc_tc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TccResponse.ProtoReflect.Descriptor instead.
func (*TccResponse) Descriptor() ([]byte, []int) {
	return file_tcc_tc_proto_rawDescGZIP(), []int{2}
}

func (x *TccResponse) GetTcc() *Tcc {
	if x != nil {
		return x.Tcc
	}
	return nil
}

type Tcc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gtid     string       `protobuf:"bytes,1,opt,name=gtid,proto3" json:"gtid,omitempty"`
	State    string       `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Branches []*TccBranch `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
	Msg      string       `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *Tcc) Reset() {
	*x = Tcc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcc_tc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tcc) ProtoMessage() {}

func (x *Tcc) ProtoReflect() protoreflect.Message {
	mi := &file_tcc_tc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tcc.ProtoReflect.Descriptor instead.
func (*Tcc) Descriptor() ([]byte, []int) {
	return file_tcc_tc_proto_rawDescGZIP(), []int{3}
}

func (x *Tcc) GetGtid() string {
	if x != nil {
		return x.Gtid
	}
	return ""
}

func (x *Tcc) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Tcc) GetBranches() []*TccBranch {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *Tcc) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type TccBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId int32  `protobuf:"varint,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	State    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Payload  []byte `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *TccBranch) Reset() {
	*x = TccBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tcc_tc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TccBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TccBranch) ProtoMessage() {}

func (x *TccBranch) ProtoReflect() protoreflect.Message {
	mi := &file_tcc_tc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TccBranch.ProtoReflect.Descriptor instead.
func (*TccBranch) Descriptor() ([]byte, []int) {
	return file_tcc_tc_proto_rawDescGZIP(), []int{4}
}

func (x *TccBranch) GetBranchId() int32 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *TccBranch) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TccBranch) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_tcc_tc_proto protoreflect.FileDescriptor

var file_tcc_tc_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x63, 0x63, 0x5f, 0x74, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03,
	0x74, 0x63, 0x63, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xac, 0x01, 0x0a, 0x0a, 0x54, 0x63, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x74, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54, 0x63, 0x63, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73,
	0x22, 0xfb, 0x01, 0x0a, 0x10, 0x54, 0x63, 0x63, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2f, 0x0a,
	0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x22, 0x29,
	0x0a, 0x0b, 0x54, 0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a,
	0x03, 0x74, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x74, 0x63, 0x63,
	0x2e, 0x54, 0x63, 0x63, 0x52, 0x03, 0x74, 0x63, 0x63, 0x22, 0x6d, 0x0a, 0x03, 0x54, 0x63, 0x63,
	0x12, 0x12, 0x0a, 0x04, 0x67, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x67, 0x74, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74,
	0x63, 0x63, 0x2e, 0x54, 0x63, 0x63, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x58, 0x0a, 0x09, 0x54, 0x63, 0x63, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x32, 0xa7, 0x02, 0x0a, 0x02, 0x54, 0x63, 0x12, 0x35, 0x0a, 0x07, 0x4e, 0x65, 0x77,
	0x47, 0x74, 0x69, 0x64, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x74,
	0x63, 0x63, 0x2e, 0x54, 0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54, 0x63,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54,
	0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x07,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12, 0x0f, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54, 0x63,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54,
	0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54,
	0x63, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x63, 0x63, 0x2e,
	0x54, 0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2e, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x0f, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54,
	0x63, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x63, 0x63, 0x2e,
	0x54, 0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a,
	0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x0f, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54, 0x63,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x63, 0x63, 0x2e, 0x54,
	0x63, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04,
	0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tcc_tc_proto_rawDescOnce sync.Once
	file_tcc_tc_proto_rawDescData = file_tcc_tc_proto_rawDesc
)

func file_tcc_tc_proto_rawDescGZIP() []byte {
	file_tcc_tc_proto_rawDescOnce.Do(func() {
		file_tcc_tc_proto_rawDescData = protoimpl.X.CompressGZIP(file_tcc_tc_proto_rawDescData)
	})
	return file_tcc_tc_proto_rawDescData
}

var file_tcc_tc_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tcc_tc_proto_goTypes = []interface{}{
	(*TccRequest)(nil),          // 0: tcc.TccRequest
	(*TccBranchRequest)(nil),    // 1: tcc.TccBranchRequest
	(*TccResponse)(nil),         // 2: tcc.TccResponse
	(*Tcc)(nil),                 // 3: tcc.Tcc
	(*TccBranch)(nil),           // 4: tcc.TccBranch
	(*timestamp.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*duration.Duration)(nil),   // 6: google.protobuf.Duration
	(*empty.Empty)(nil),         // 7: google.protobuf.Empty
}
var file_tcc_tc_proto_depIdxs = []int32{
	5,  // 0: tcc.TccRequest.expire_time:type_name -> google.protobuf.Timestamp
	1,  // 1: tcc.TccRequest.branches:type_name -> tcc.TccBranchRequest
	6,  // 2: tcc.TccBranchRequest.timeout:type_name -> google.protobuf.Duration
	6,  // 3: tcc.TccBranchRequest.retry:type_name -> google.protobuf.Duration
	3,  // 4: tcc.TccResponse.tcc:type_name -> tcc.Tcc
	4,  // 5: tcc.Tcc.branches:type_name -> tcc.TccBranch
	7,  // 6: tcc.Tc.NewGtid:input_type -> google.protobuf.Empty
	0,  // 7: tcc.Tc.Get:input_type -> tcc.TccRequest
	0,  // 8: tcc.Tc.Prepare:input_type -> tcc.TccRequest
	0,  // 9: tcc.Tc.Register:input_type -> tcc.TccRequest
	0,  // 10: tcc.Tc.Confirm:input_type -> tcc.TccRequest
	0,  // 11: tcc.Tc.Cancel:input_type -> tcc.TccRequest
	2,  // 12: tcc.Tc.NewGtid:output_type -> tcc.TccResponse
	2,  // 13: tcc.Tc.Get:output_type -> tcc.TccResponse
	2,  // 14: tcc.Tc.Prepare:output_type -> tcc.TccResponse
	2,  // 15: tcc.Tc.Register:output_type -> tcc.TccResponse
	2,  // 16: tcc.Tc.Confirm:output_type -> tcc.TccResponse
	2,  // 17: tcc.Tc.Cancel:output_type -> tcc.TccResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_tcc_tc_proto_init() }
func file_tcc_tc_proto_init() {
	if File_tcc_tc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tcc_tc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TccRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tcc_tc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TccBranchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tcc_tc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TccResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tcc_tc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tcc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tcc_tc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TccBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tcc_tc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tcc_tc_proto_goTypes,
		DependencyIndexes: file_tcc_tc_proto_depIdxs,
		MessageInfos:      file_tcc_tc_proto_msgTypes,
	}.Build()
	File_tcc_tc_proto = out.File
	file_tcc_tc_proto_rawDesc = nil
	file_tcc_tc_proto_goTypes = nil
	file_tcc_tc_proto_depIdxs = nil
}
